drop table if exists public.users cascade ;
create table
    public.users (
                     id bigint generated by default as identity not null,
                     name character varying not null,
                     surname character varying null,
                     mail character varying not null,
                     password text not null,
                     role text not null,
                     constraint utilisateur_pkey primary key (id),
                     constraint users_role_check check (
                         (
                             role = any (
                                 array[
                                     'teacher'::text,
                                     'student_SIC'::text,
                                     'student_BDA'::text,
                                     'student_SE'::text,
                                     'admin'::text
                                     ]
                                 )
                             )
                         )
);

drop table if exists modules cascade ;
create table
    public.modules (
                       id bigint generated by default as identity not null,
                       description text not null,
                       major text not null,
                       id_teacher bigint not null,
                       constraint Cours_pkey primary key (id),
                       constraint modules_id_teacher_fkey foreign key (id_teacher) references users (id) on update cascade on delete cascade,
                       constraint module_major_check check (
                           (
                               major = any (array['SIC'::text, 'BDA'::text, 'SE'::text])
                               )
                           )
);

drop table if exists skills cascade ;
create table
    public.skills (
                      id bigint generated by default as identity not null,
                      description text not null,
                      id_module bigint not null,
                      constraint skills_pkey primary key (id),
                      constraint skills_id_module_fkey foreign key (id_module) references modules (id) on update cascade on delete cascade
);

drop table if exists autoevaluations cascade ;
create table
    public.autoevaluations (
                               id bigint generated by default as identity not null,
                               id_skill bigint not null,
                               id_student bigint not null,
                               eval text not null,
                               constraint autoevaluation_pkey primary key (id),
                               constraint autoevaluations_id_skill_fkey foreign key (id_skill) references skills (id) on update cascade on delete cascade,
                               constraint autoevaluations_id_student_fkey foreign key (id_student) references users (id) on update cascade on delete cascade,
                               constraint autoevaluations_eval_check check (
                                   (
                                       eval = any (
                                           array[
                                               'acquired'::text,
                                               'acquiring'::text,
                                               'no acquired'::text,
                                               'no evaluated'::text
                                               ]
                                           )
                                       )
                                   )
);